imports
{
}

attr Tm Tm_
    syn inferredType :: {Ty}
    syn substitution :: {TySubst}
    inh typeEnvironment :: {TyEnv}
    chn counter :: {Int} -- Useful for creating unique, fresh variables

sem Tm
   | Tm loc.num :: uniqueref counter
sem Tm_
   | Var loc.num :: uniqueref counter
   | Lam loc.num :: uniqueref counter
   | App loc.num :: uniqueref counter
   | Let loc.num :: uniqueref counter 











{
nextUnique :: Int -> (Int, Int)
nextUnique u = (u+1, u)
}
